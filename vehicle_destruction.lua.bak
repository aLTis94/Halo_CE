-- Makes vehicles like Falcon explode
-- NEED TO MERGE VEHICLE HEALTH SCRIPT WITH THIS ONE!!!
-- need to add smoke!
api_version = "1.9.0.0"

-- CONFIG
	
	-- Vehicles and their destroyed variants
	VEHICLE_TAGS = {
		["vehicles\\falcon\\falcon"] = {"vehicles\\falcon_destroyed\\falcon_destroyed", 0x1},
		["halo reach\\objects\\vehicles\\human\\civilian\\military_truck\\military truck"] = {"altis\\vehicles\\truck_destroyed\\truck_destroyed", 0},
		["altis\\vehicles\\scorpion\\scorpion"] = {"altis\\vehicles\\scorpion_destroyed\\scorpion_destroyed", 0},
	}

-- END OF CONFIG



VEHICLES = {}
VEHICLE_TAG_IDS = {}

function OnScriptLoad()
	object_table_ptr = sig_scan("8B0D????????8B513425FFFF00008D")
	register_callback(cb["EVENT_TICK"],"OnTick")
	register_callback(cb['EVENT_GAME_START'],"OnGameStart")
	register_callback(cb['EVENT_OBJECT_SPAWN'], "OnObjectSpawn")
	Initialize()
end

function OnGameStart()
	VEHICLES = {}
	Initialize()
end

function OnObjectSpawn(PlayerIndex, MetaID, ParentID, ID)
	if VEHICLE_TAG_IDS[MetaID] ~= nil then
		VEHICLES[ID] = {}
		VEHICLES[ID].name = VEHICLE_TAG_IDS[MetaID]
		VEHICLES[ID].destroyed = false
		VEHICLES[ID].respawning = 0
	end
end

function OnTick()
	for ID,info in pairs (VEHICLES) do 
		local object = get_object_memory(ID)
		if object ~= 0 then
			if VEHICLES[ID].respawning > 0 then
				write_float(object + 0x68, 0)
				write_float(object + 0x6C, 0)
				write_float(object + 0x70, 0)
				write_float(object + 0x8C, 0)
				write_float(object + 0x90, 0)
				write_float(object + 0x94, 0)
				VEHICLES[ID].respawning = VEHICLES[ID].respawning - 1
			end
			if info.destroyed == false then
				SetDamager(object)
				local shields = read_float(object + 0xE4)
				if shields == 0 then
					KillPassengers(ID)
				end
			elseif VEHICLES[ID].destroyed_vehicle ~= nil then
				write_float(object + 0xE4, 1)
				VEHICLES[ID].respawning = 5
				if DistanceFormula(-77,-187,-110,read_float(object + 0x5C),read_float(object + 0x60),read_float(object + 0x64)) > 30 then
					destroy_object(VEHICLES[ID].destroyed_vehicle)
					VEHICLES[ID].destroyed_vehicle = nil
					VEHICLES[ID].destroyed = false
				end
			end
		else
			say_all("vehicle is gone but not destroyed!")
			VEHICLES[ID] = nil
		end
	end
end

function DestroyVehicle(ID)
	local object = get_object_memory(ID)
	SetDamager(object)
	local x = read_float(object + 0x5C)
	local y = read_float(object + 0x60)
	local z = read_float(object + 0x64)
	VEHICLES[ID].destroyed_vehicle = spawn_object("vehi", VEHICLE_TAGS[VEHICLES[ID].name][1], x, y, z)
	local destroyed_object = get_object_memory(VEHICLES[ID].destroyed_vehicle)
	if destroyed_object ~= 0 then
		write_float(destroyed_object + 0x5C, read_float(object + 0x5C))
		write_float(destroyed_object + 0x60, read_float(object + 0x60))
		write_float(destroyed_object + 0x64, read_float(object + 0x64))
		write_float(destroyed_object + 0x68, read_float(object + 0x68))
		write_float(destroyed_object + 0x6C, read_float(object + 0x6C))
		write_float(destroyed_object + 0x70, read_float(object + 0x70) + 0.05)
		write_float(destroyed_object + 0x74, read_float(object + 0x74))
		write_float(destroyed_object + 0x78, read_float(object + 0x78))
		write_float(destroyed_object + 0x7C, read_float(object + 0x7C))
		write_float(destroyed_object + 0x80, read_float(object + 0x80))
		write_float(destroyed_object + 0x84, read_float(object + 0x84))
		write_float(destroyed_object + 0x88, read_float(object + 0x88))
	end
	
	VEHICLES[ID].destroyed = true
	MoveToScriptRoom(ID)
end

-- Set the correct damager to the player in attempt to fix 'died' message
function SetDamager(object)
	for i = 1,16 do
		local player = get_dynamic_player(i)
		if player ~= 0 then
			local vehicle = read_dword(player + 0x11C)
			if object == get_object_memory(vehicle) then
				write_word(player + 0x404, read_word(object + 0x404))
				write_dword(player + 0x40C, read_dword(object + 0x40C))
				write_dword(player + 0x430, read_dword(object + 0x430))
				write_dword(player + 0x438, read_dword(object + 0x438))
				write_dword(player + 0x43C, read_dword(object + 0x43C))
				write_float(player + 0x434, read_float(object + 0x434)*0.01)
			end
		end
	end
end

function KillPassengers(ID)
	local object = get_object_memory(ID)
	if object == 0 then
		return false
	end
	local passengers = 0
	for i = 1,16 do
		local player = get_dynamic_player(i)
		if player ~= 0 then
			local vehicle = read_dword(player + 0x11C)
			if object == get_object_memory(vehicle) then
				passengers = passengers + 1
				write_float(player + 0xE0)
			end
		end
	end
	if passengers == 0 then
		DestroyVehicle(ID)
	end
end

function Initialize()
	local object_table = read_dword(read_dword(object_table_ptr + 2))
	local object_count = read_word(object_table + 0x2E)
	local first_object = read_dword(object_table + 0x34)
	
	for i=0,object_count-1 do
		local ID = read_word(first_object + i*12)*0x10000 + i
		local object = get_object_memory(ID)
		if object ~= 0 and read_word(object + 0xB4) == 1 then
			local name = GetName(object)
			if VEHICLE_TAGS[name] ~= nil then
				VEHICLES[ID] = {}
				VEHICLES[ID].name = name
				VEHICLES[ID].destroyed = false
				VEHICLES[ID].respawning = 0
			end
		end
	end
	
	VEHICLE_TAG_IDS = {}
	for name,info in pairs (VEHICLE_TAGS) do 
		local MetaID = GetMetaID("vehi", name)
		if MetaID ~= nil then
			VEHICLE_TAG_IDS[MetaID] = name
		end
	end
end

function MoveToScriptRoom(ID)
	local object = get_object_memory(ID)
	if object ~= 0 then
		write_float(object + 0x5C, -77)
		write_float(object + 0x60, -187)
		write_float(object + 0x64, -110)
	end
end

function OnScriptUnload()
	for ID,info in pairs (VEHICLES) do 
		if info.destroyed == true then
			if VEHICLES[ID].destroyed_vehicle ~= nil then
				destroy_object(VEHICLES[ID].destroyed_vehicle)
			end
		end
	end
end

function GetMetaID(object_type, object_dir)
	local address = lookup_tag(object_type,object_dir)
	if(address ~= 0) then
		return read_dword(address + 0xC)
	end
	return nil
end

function DistanceFormula(x1,y1,z1,x2,y2,z2)-- Finds distance between two coordinates (from 002)
    return math.sqrt(math.pow(x1 - x2,2) + math.pow(y1 - y2,2) + math.pow(z1 - z2,2))
end

function GetName(DynamicObject)--	Gets directory + name of the object
	return read_string(read_dword(read_word(DynamicObject) * 32 + 0x40440038))
end